generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Professional {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(50)
  email       String?   @unique @db.VarChar(100)
  phone       String?   @db.VarChar(20)
  photoUrl    String    @db.VarChar(500)
  description String    @db.VarChar(300)
  biography   String    @db.Text
  role        Role
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  posts Post[]

  @@map("professional")
}

model Banner {
  id        Int       @id @default(autoincrement())
  imageUrl  String    @db.VarChar(500)
  altText   String    @db.VarChar(300)
  linkUrl   String    @db.VarChar(500)
  isActive  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@map("banner")
}

model Service {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  iconUrl     String    @db.VarChar(500)
  imageUrl    String?   @db.VarChar(500)
  summary     String    @db.VarChar(200)
  description String?   @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  @@map("service")
}

model Post {
  id             Int       @id @default(autoincrement())
  title          String    @db.VarChar(150)
  description    String    @db.VarChar(250)
  content        String    @db.Text
  featuredImage  String?   @db.VarChar(500)
  professionalId Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt

  professional Professional @relation(fields: [professionalId], references: [id], onDelete: Cascade)

  @@map("post")
}

enum Role {
  DOCTOR
  NUTRITIONIST
  PSYCHOLOGIST
  PHYSIOTHERAPIST
  THERAPY_TECHNICIAN
  OWNER

  @@map("role")
}
